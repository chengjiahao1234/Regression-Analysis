+ f(school, model = "iid", hyper =
list(prec = list(prior = "pc.prec", param = c(log(2), 0.1))))
+ f(RuralUrban, model = "iid", hyper =
list(prec = list(prior = "pc.prec", param = c(log(2), 0.5)))),
data = forInla, family = "binomial", control.inla =
list(strategy = "gaussian"), lincomb = forLincombs1)
par(mfrow=c(2, 2))
smokePrior1 = Pmisc::priorPostSd(smokeModel1)
do.call(matplot, smokePrior1$state$matplot)
do.call(legend, smokePrior1$legend)
mtext("state", side=3)
do.call(matplot, smokePrior1$school$matplot)
do.call(legend, smokePrior1$legend)
mtext("school", side=3)
do.call(matplot, smokePrior1$RuralUrban$matplot)
do.call(legend, smokePrior1$legend)
mtext("Rural-Urban", side=3)
rbind(smokeModel1$summary.fixed[, c("mean", "0.025quant", "0.975quant")],
Pmisc::priorPostSd(smokeModel1)$summary[, c("mean", "0.025quant", "0.975quant")])
# create matrix of predicted probabilities
theCoef1 = exp(smokeModel1$summary.lincomb.derived[, c("0.5quant",
"0.025quant", "0.975quant")])
theCoef1 = theCoef1/(1 + theCoef1)
load(smokeFile)
smoke[1:3, c("Age", "ever_cigarettes", "Sex", "Race",
"state", "school", "RuralUrban")]
forInla = smoke[smoke$Age > 10, c("Age", "ever_cigarettes",
"Sex", "Race", "state", "school", "RuralUrban",
"Harm_belief_of_chewing_to")]
forInla = na.omit(forInla)
forInla$y = as.numeric(forInla$ever_cigarettes)
forInla$ageFac = factor(as.numeric(as.character(forInla$Age)))
# forInla$ageFac = relevel(factor(forInla$Age), '14')
forInla$chewingHarm = factor(forInla$Harm_belief_of_chewing_to,
levels = 1:4, labels = c("less", "equal", "more", "dunno"))
toPredict = expand.grid(ageFac = levels(forInla$ageFac),
RuralUrban = levels(forInla$RuralUrban), chewingHarm = levels(forInla$chewingHarm),
Sex = levels(forInla$Sex))
forLincombs1 = do.call(inla.make.lincombs,
as.data.frame(model.matrix(~Sex + ageFac *
RuralUrban,
data = toPredict)))
smokeModel1 = inla(y ~ Sex + ageFac * RuralUrban +
f(state, model = "iid", hyper =
list(prec = list(prior = "pc.prec", param = c(log(2), 0.05))))
+ f(school, model = "iid", hyper =
list(prec = list(prior = "pc.prec", param = c(2/3, 0.1))))
+ f(RuralUrban, model = "iid", hyper =
list(prec = list(prior = "pc.prec", param = c(log(2), 0.5)))),
data = forInla, family = "binomial", control.inla =
list(strategy = "gaussian"), lincomb = forLincombs1)
par(mfrow=c(2, 2))
smokePrior1 = Pmisc::priorPostSd(smokeModel1)
do.call(matplot, smokePrior1$state$matplot)
do.call(legend, smokePrior1$legend)
mtext("state", side=3)
do.call(matplot, smokePrior1$school$matplot)
do.call(legend, smokePrior1$legend)
mtext("school", side=3)
do.call(matplot, smokePrior1$RuralUrban$matplot)
do.call(legend, smokePrior1$legend)
mtext("Rural-Urban", side=3)
rbind(smokeModel1$summary.fixed[, c("mean", "0.025quant", "0.975quant")],
Pmisc::priorPostSd(smokeModel1)$summary[, c("mean", "0.025quant", "0.975quant")])
# create matrix of predicted probabilities
theCoef1 = exp(smokeModel1$summary.lincomb.derived[, c("0.5quant",
"0.025quant", "0.975quant")])
theCoef1 = theCoef1/(1 + theCoef1)
load(smokeFile)
smoke[1:3, c("Age", "ever_cigarettes", "Sex", "Race",
"state", "school", "RuralUrban")]
forInla = smoke[smoke$Age > 10, c("Age", "ever_cigarettes",
"Sex", "Race", "state", "school", "RuralUrban",
"Harm_belief_of_chewing_to")]
forInla = na.omit(forInla)
forInla$y = as.numeric(forInla$ever_cigarettes)
forInla$ageFac = factor(as.numeric(as.character(forInla$Age)))
# forInla$ageFac = relevel(factor(forInla$Age), '14')
forInla$chewingHarm = factor(forInla$Harm_belief_of_chewing_to,
levels = 1:4, labels = c("less", "equal", "more", "dunno"))
toPredict = expand.grid(ageFac = levels(forInla$ageFac),
RuralUrban = levels(forInla$RuralUrban), chewingHarm = levels(forInla$chewingHarm),
Sex = levels(forInla$Sex))
forLincombs1 = do.call(inla.make.lincombs,
as.data.frame(model.matrix(~Sex + ageFac *
RuralUrban,
data = toPredict)))
smokeModel1 = inla(y ~ Sex + ageFac * RuralUrban +
f(state, model = "iid", hyper =
list(prec = list(prior = "pc.prec", param = c(log(2), 0.05))))
+ f(school, model = "iid", hyper =
list(prec = list(prior = "pc.prec", param = c(log(2), 0.1))))
+ f(RuralUrban, model = "iid", hyper =
list(prec = list(prior = "pc.prec", param = c(log(2), 0.5)))),
data = forInla, family = "binomial", control.inla =
list(strategy = "gaussian"), lincomb = forLincombs1)
load(smokeFile)
smoke[1:3, c("Age", "ever_cigarettes", "Sex", "Race",
"state", "school", "RuralUrban")]
forInla = smoke[smoke$Age > 10, c("Age", "ever_cigarettes",
"Sex", "Race", "state", "school", "RuralUrban",
"Harm_belief_of_chewing_to")]
forInla = na.omit(forInla)
forInla$y = as.numeric(forInla$ever_cigarettes)
forInla$ageFac = factor(as.numeric(as.character(forInla$Age)))
# forInla$ageFac = relevel(factor(forInla$Age), '14')
forInla$chewingHarm = factor(forInla$Harm_belief_of_chewing_to,
levels = 1:4, labels = c("less", "equal", "more", "dunno"))
toPredict = expand.grid(ageFac = levels(forInla$ageFac),
RuralUrban = levels(forInla$RuralUrban), chewingHarm = levels(forInla$chewingHarm),
Sex = levels(forInla$Sex))
forLincombs1 = do.call(inla.make.lincombs,
as.data.frame(model.matrix(~Sex + ageFac * Race,
data = toPredict)))
forInla$Race
load(smokeFile)
smoke[1:3, c("Age", "ever_cigarettes", "Sex", "Race",
"state", "school", "RuralUrban")]
forInla = smoke[smoke$Age > 10, c("Age", "ever_cigarettes",
"Sex", "Race", "state", "school", "RuralUrban",
"Harm_belief_of_chewing_to")]
forInla = na.omit(forInla)
forInla$y = as.numeric(forInla$ever_cigarettes)
forInla$ageFac = factor(as.numeric(as.character(forInla$Age)))
# forInla$ageFac = relevel(factor(forInla$Age), '14')
forInla$chewingHarm = factor(forInla$Harm_belief_of_chewing_to,
levels = 1:4, labels = c("less", "equal", "more", "dunno"))
toPredict = expand.grid(ageFac = levels(forInla$ageFac),
RuralUrban = levels(forInla$RuralUrban), chewingHarm = levels(forInla$chewingHarm),
Sex = levels(forInla$Sex))
forLincombs1 = do.call(inla.make.lincombs,
as.data.frame(model.matrix(~Sex + ageFac * Race,
data = toPredict)))
load(smokeFile)
smoke[1:3, c("Age", "ever_cigarettes", "Sex", "Race",
"state", "school", "RuralUrban")]
forInla = smoke[smoke$Age > 10, c("Age", "ever_cigarettes",
"Sex", "Race", "state", "school", "RuralUrban",
"Harm_belief_of_chewing_to")]
forInla = na.omit(forInla)
forInla$y = as.numeric(forInla$ever_cigarettes)
forInla$ageFac = factor(as.numeric(as.character(forInla$Age)))
# forInla$ageFac = relevel(factor(forInla$Age), '14')
forInla$chewingHarm = factor(forInla$Harm_belief_of_chewing_to,
levels = 1:4, labels = c("less", "equal", "more", "dunno"))
toPredict = expand.grid(ageFac = levels(forInla$ageFac),
RuralUrban = levels(forInla$RuralUrban), chewingHarm = levels(forInla$chewingHarm),
Sex = levels(forInla$Sex))
forLincombs1 = do.call(inla.make.lincombs,
as.data.frame(model.matrix(~Sex + ageFac * Race,
data = toPredict)))
load(smokeFile)
smoke[1:3, c("Age", "ever_cigarettes", "Sex", "Race",
"state", "school", "RuralUrban")]
forInla = smoke[smoke$Age > 10, c("Age", "ever_cigarettes",
"Sex", "Race", "state", "school", "RuralUrban",
"Harm_belief_of_chewing_to")]
forInla = na.omit(forInla)
forInla$y = as.numeric(forInla$ever_cigarettes)
forInla$ageFac = factor(as.numeric(as.character(forInla$Age)))
# forInla$ageFac = relevel(factor(forInla$Age), '14')
forInla$chewingHarm = factor(forInla$Harm_belief_of_chewing_to,
levels = 1:4, labels = c("less", "equal", "more", "dunno"))
toPredict = expand.grid(ageFac = levels(forInla$ageFac),
RuralUrban = levels(forInla$RuralUrban), Race = levels(forInla$Race),
Sex = levels(forInla$Sex))
forLincombs1 = do.call(inla.make.lincombs,
as.data.frame(model.matrix(~Sex + ageFac * Race,
data = toPredict)))
smokeModel1 = inla(y ~ Sex + ageFac * Race +
f(state, model = "iid", hyper =
list(prec = list(prior = "pc.prec", param = c(log(2), 0.05))))
+ f(school, model = "iid", hyper =
list(prec = list(prior = "pc.prec", param = c(log(2), 0.1))))
+ f(RuralUrban, model = "iid", hyper =
list(prec = list(prior = "pc.prec", param = c(log(2), 0.5)))),
data = forInla, family = "binomial", control.inla =
list(strategy = "gaussian"), lincomb = forLincombs1)
par(mfrow=c(2, 2))
smokePrior1 = Pmisc::priorPostSd(smokeModel1)
do.call(matplot, smokePrior1$state$matplot)
do.call(legend, smokePrior1$legend)
mtext("state", side=3)
do.call(matplot, smokePrior1$school$matplot)
do.call(legend, smokePrior1$legend)
mtext("school", side=3)
do.call(matplot, smokePrior1$RuralUrban$matplot)
do.call(legend, smokePrior1$legend)
mtext("Rural-Urban", side=3)
rbind(smokeModel1$summary.fixed[, c("mean", "0.025quant", "0.975quant")],
Pmisc::priorPostSd(smokeModel1)$summary[, c("mean", "0.025quant", "0.975quant")])
# create matrix of predicted probabilities
theCoef1 = exp(smokeModel1$summary.lincomb.derived[, c("0.5quant",
"0.025quant", "0.975quant")])
theCoef1 = theCoef1/(1 + theCoef1)
forInla$y
forLincombs2 = do.call(inla.make.lincombs,
as.data.frame(model.matrix(~Sex + ageFac *
RuralUrban * Race,
data = toPredict)))
smokeModel2 = inla(y ~ Sex + ageFac * RuralUrban * Race +
f(state, model = "iid", hyper =
list(prec = list(prior = "pc.prec", param = c(log(2), 0.05))))
+ f(school, model = "iid", hyper =
list(prec = list(prior = "pc.prec", param = c(log(2), 0.1))))
+ f(RuralUrban, model = "iid", hyper =
list(prec = list(prior = "pc.prec", param = c(log(2), 0.5)))),
data = forInla, family = "binomial", control.inla =
list(strategy = "gaussian"), lincomb = forLincombs2)
forInla$ageFac
x <- rgamma(100000, shape = log(2), rate = 0.05)
density(x)
plot(x)
plot(x)
x = seq(0.0, 10, by = 1)
plot(x = x, y = dgamma(x = x, shape = log(2), rate = 0.5))
plot(x = x, y = dgamma(x = x, shape = log(2), rate = 0.05))
plot(x = x, y = dgamma(x = x, shape = log(2), rate = 0.1))
plot(x = x, y = log(dgamma(x = x, shape = log(2), rate = 0.1))
plot(x = x, y = log(dgamma(x = x, shape = log(2), rate = 0.1)))
plot(x = x, y = log(dgamma(x = x, shape = log(2), rate = 0.1)))
par(mfrow=c(2, 2))
smokePrior2 = Pmisc::priorPostSd(smokeModel2)
do.call(matplot, smokePrior2$state$matplot)
do.call(legend, smokePrior2$legend)
mtext("state", side=3)
do.call(matplot, smokePrior2$school$matplot)
do.call(legend, smokePrior2$legend)
mtext("school", side=3)
do.call(matplot, smokePrior2$RuralUrban$matplot)
do.call(legend, smokePrior2$legend)
mtext("Rural-Urban", side=3)
rbind(smokeModel2$summary.fixed[, c("mean", "0.025quant", "0.975quant")],
Pmisc::priorPostSd(smokeModel2)$summary[, c("mean", "0.025quant",
"0.975quant")])
# create matrix of predicted probabilities
theCoef2 = exp(smokeModel2$summary.lincomb.derived[, c("0.5quant",
"0.025quant", "0.975quant")])
theCoef2 = theCoef2/(1 + theCoef2)
smokeTable <- smokeModel2$summary.fixed
smokeTable[, 1] <- exp(smokeTable[, 1])
knitr::kable(smokeTable, digits=3)
# smokeTable2 <- 1/sqrt(smokeModel2$summary.hyper)
# schoolTable2[, 1] <- exp(schoolTable2[, 1])
knitr::kable(Pmisc::priorPostSd(smokeModel2)$summary, digits=3)
par(mfrow=c(2, 2))
smokePrior2 = Pmisc::priorPostSd(smokeModel2)
do.call(matplot, smokePrior2$state$matplot)
do.call(legend, smokePrior2$legend)
mtext("state", side=3)
do.call(matplot, smokePrior2$school$matplot)
do.call(legend, smokePrior2$legend)
mtext("school", side=3)
do.call(matplot, smokePrior2$RuralUrban$matplot)
do.call(legend, smokePrior2$legend)
mtext("Rural-Urban", side=3)
rbind(smokeModel2$summary.fixed[, c("mean", "0.025quant", "0.975quant")],
Pmisc::priorPostSd(smokeModel2)$summary[, c("mean", "0.025quant",
"0.975quant")])
# create matrix of predicted probabilities
theCoef2 = exp(smokeModel2$summary.lincomb.derived[, c("0.5quant",
"0.025quant", "0.975quant")])
theCoef2 = theCoef2/(1 + theCoef2)
smokeTable <- smokeModel2$summary.fixed
smokeTable[, 1] <- exp(smokeTable[, 1])
knitr::kable(smokeTable, digits=3)
knitr::kable(Pmisc::priorPostSd(smokeModel2)$summary, digits=3)
smokeTable2 <- 1/sqrt(smokeModel2$summary.hyper)
# smokeTable2[, 1] <- exp(smokeTable2[, 1])
knitr::kable(smokeTable2, digits=3)
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
remove.packages("xfun", lib="~/R/win-library/4.0")
install.packages("xfun")
install.packages("xfun")
install.packages("xfun")
# STA442 Assignment 2
# install.packages("Pmisc", repos="http://r-forge.r-project.org")
# install.packages("INLA")
library("Pmisc")
library("INLA")
par(mfrow=c(2, 2))
smokePrior2 = Pmisc::priorPostSd(smokeModel2)
do.call(matplot, smokePrior2$state$matplot)
do.call(legend, smokePrior2$legend)
mtext("state", side=3)
do.call(matplot, smokePrior2$school$matplot)
do.call(legend, smokePrior2$legend)
mtext("school", side=3)
do.call(matplot, smokePrior2$RuralUrban$matplot)
do.call(legend, smokePrior2$legend)
mtext("Rural-Urban", side=3)
rbind(smokeModel2$summary.fixed[, c("mean", "0.025quant", "0.975quant")],
Pmisc::priorPostSd(smokeModel2)$summary[, c("mean", "0.025quant",
"0.975quant")])
# create matrix of predicted probabilities
theCoef2 = exp(smokeModel2$summary.lincomb.derived[, c("0.5quant",
"0.025quant", "0.975quant")])
theCoef2 = theCoef2/(1 + theCoef2)
smokeTable <- smokeModel2$summary.fixed
smokeTable[, 1] <- exp(smokeTable[, 1])
knitr::kable(smokeTable, digits=3)
knitr::kable(Pmisc::priorPostSd(smokeModel2)$summary, digits=3)
smokeTable2 <- 1/sqrt(smokeModel2$summary.hyper)
# smokeTable2[, 1] <- exp(smokeTable2[, 1])
knitr::kable(smokeTable2, digits=3)
par(mfrow=c(2, 2))
smokePrior1 = Pmisc::priorPostSd(smokeModel1)
do.call(matplot, smokePrior1$state$matplot)
do.call(legend, smokePrior1$legend)
mtext("state", side=3)
do.call(matplot, smokePrior1$school$matplot)
do.call(legend, smokePrior1$legend)
mtext("school", side=3)
do.call(matplot, smokePrior1$RuralUrban$matplot)
do.call(legend, smokePrior1$legend)
mtext("Rural-Urban", side=3)
rbind(smokeModel1$summary.fixed[, c("mean", "0.025quant", "0.975quant")],
Pmisc::priorPostSd(smokeModel1)$summary[, c("mean", "0.025quant",
"0.975quant")])
# create matrix of predicted probabilities
theCoef1 = exp(smokeModel1$summary.lincomb.derived[, c("0.5quant",
"0.025quant", "0.975quant")])
theCoef1 = theCoef1/(1 + theCoef1)
lrtest(smokeModel1, smokeModel2)
qnorm(0.75)
qnorm(0.9)
qnorm(0.9)
qnorm(0.1)
load(smokeFile)
smoke[1:3, c("Age", "ever_cigarettes", "Sex", "Race",
"state", "school", "RuralUrban")]
forInla = smoke[smoke$Age > 10, c("Age", "ever_cigarettes",
"Sex", "Race", "state", "school", "RuralUrban",
"Harm_belief_of_chewing_to")]
forInla = na.omit(forInla)
forInla$y = as.numeric(forInla$ever_cigarettes)
forInla$ageFac = factor(as.numeric(as.character(forInla$Age)))
# forInla$ageFac = relevel(factor(forInla$Age), '14')
forInla$chewingHarm = factor(forInla$Harm_belief_of_chewing_to,
levels = 1:4, labels = c("less", "equal", "more", "dunno"))
toPredict = expand.grid(ageFac = levels(forInla$ageFac),
RuralUrban = levels(forInla$RuralUrban), Race = levels(forInla$Race),
Sex = levels(forInla$Sex))
forLincombs1 = do.call(inla.make.lincombs,
as.data.frame(model.matrix(~Sex + ageFac * Race,
data = toPredict)))
smokeModel1 = inla(y ~ Sex + ageFac * Race +
f(state, model = "iid", hyper =
list(prec = list(prior = "pc.prec", param = c(log(3)/2.5, 0.5))))
+ f(school, model = "iid", hyper =
list(prec = list(prior = "pc.prec", param = c(log(1.5)/2.5, 0.15)))),
data = forInla, family = "binomial", control.inla =
list(strategy = "gaussian"), lincomb = forLincombs1)
par(mfrow=c(2, 2))
smokePrior1 = Pmisc::priorPostSd(smokeModel1)
do.call(matplot, smokePrior1$state$matplot)
do.call(legend, smokePrior1$legend)
mtext("state", side=3)
do.call(matplot, smokePrior1$school$matplot)
do.call(legend, smokePrior1$legend)
mtext("school", side=3)
do.call(matplot, smokePrior1$RuralUrban$matplot)
par(mfrow=c(1, 2))
smokePrior1 = Pmisc::priorPostSd(smokeModel1)
do.call(matplot, smokePrior1$state$matplot)
do.call(legend, smokePrior1$legend)
mtext("state", side=3)
do.call(matplot, smokePrior1$school$matplot)
do.call(legend, smokePrior1$legend)
mtext("school", side=3)
# do.call(matplot, smokePrior1$RuralUrban$matplot)
# do.call(legend, smokePrior1$legend)
# mtext("Rural-Urban", side=3)
rbind(smokeModel1$summary.fixed[, c("mean", "0.025quant", "0.975quant")],
Pmisc::priorPostSd(smokeModel1)$summary[, c("mean", "0.025quant",
"0.975quant")])
# create matrix of predicted probabilities
theCoef1 = exp(smokeModel1$summary.lincomb.derived[, c("0.5quant",
"0.025quant", "0.975quant")])
theCoef1 = theCoef1/(1 + theCoef1)
load(smokeFile)
smoke[1:3, c("Age", "ever_cigarettes", "Sex", "Race",
"state", "school", "RuralUrban")]
forInla = smoke[smoke$Age > 10, c("Age", "ever_cigarettes",
"Sex", "Race", "state", "school", "RuralUrban",
"Harm_belief_of_chewing_to")]
forInla = na.omit(forInla)
forInla$y = as.numeric(forInla$ever_cigarettes)
forInla$ageFac = factor(as.numeric(as.character(forInla$Age)))
# forInla$ageFac = relevel(factor(forInla$Age), '14')
forInla$chewingHarm = factor(forInla$Harm_belief_of_chewing_to,
levels = 1:4, labels = c("less", "equal", "more", "dunno"))
toPredict = expand.grid(ageFac = levels(forInla$ageFac),
RuralUrban = levels(forInla$RuralUrban), Race = levels(forInla$Race),
Sex = levels(forInla$Sex))
forLincombs1 = do.call(inla.make.lincombs,
as.data.frame(model.matrix(~Sex + RuralUrban + ageFac * Race,
data = toPredict)))
smokeModel1 = inla(y ~ Sex + RuralUrban + ageFac * Race +
f(state, model = "iid", hyper =
list(prec = list(prior = "pc.prec", param = c(log(3)/2.5, 0.5))))
+ f(school, model = "iid", hyper =
list(prec = list(prior = "pc.prec", param = c(log(1.5)/2.5, 0.15)))),
data = forInla, family = "binomial", control.inla =
list(strategy = "gaussian"), lincomb = forLincombs1)
par(mfrow=c(1, 2))
smokePrior1 = Pmisc::priorPostSd(smokeModel1)
do.call(matplot, smokePrior1$state$matplot)
do.call(legend, smokePrior1$legend)
mtext("state", side=3)
do.call(matplot, smokePrior1$school$matplot)
do.call(legend, smokePrior1$legend)
mtext("school", side=3)
# do.call(matplot, smokePrior1$RuralUrban$matplot)
# do.call(legend, smokePrior1$legend)
# mtext("Rural-Urban", side=3)
rbind(smokeModel1$summary.fixed[, c("mean", "0.025quant", "0.975quant")],
Pmisc::priorPostSd(smokeModel1)$summary[, c("mean", "0.025quant",
"0.975quant")])
# create matrix of predicted probabilities
theCoef1 = exp(smokeModel1$summary.lincomb.derived[, c("0.5quant",
"0.025quant", "0.975quant")])
theCoef1 = theCoef1/(1 + theCoef1)
forLincombs2 = do.call(inla.make.lincombs,
as.data.frame(model.matrix(~Sex + ageFac *
RuralUrban * Race,
data = toPredict)))
smokeModel2 = inla(y ~ Sex + ageFac * RuralUrban * Race +
f(state, model = "iid", hyper =
list(prec = list(prior = "pc.prec", param = c(0.4, 0.1))))
+ f(school, model = "iid", hyper =
list(prec = list(prior = "pc.prec", param = c(0.55, 0.1)))),
data = forInla, family = "binomial", control.inla =
list(strategy = "gaussian"), lincomb = forLincombs2)
lrtest(smokeModel1, smokeModel2)
par(mfrow=c(1, 2))
smokePrior2 = Pmisc::priorPostSd(smokeModel2)
do.call(matplot, smokePrior2$state$matplot)
do.call(legend, smokePrior2$legend)
mtext("state", side=3)
do.call(matplot, smokePrior2$school$matplot)
do.call(legend, smokePrior2$legend)
mtext("school", side=3)
# do.call(matplot, smokePrior2$RuralUrban$matplot)
# do.call(legend, smokePrior2$legend)
# mtext("Rural-Urban", side=3)
rbind(smokeModel2$summary.fixed[, c("mean", "0.025quant", "0.975quant")],
Pmisc::priorPostSd(smokeModel2)$summary[, c("mean", "0.025quant",
"0.975quant")])
# create matrix of predicted probabilities
theCoef2 = exp(smokeModel2$summary.lincomb.derived[, c("0.5quant",
"0.025quant", "0.975quant")])
theCoef2 = theCoef2/(1 + theCoef2)
smokeTable <- smokeModel2$summary.fixed
smokeTable[, 1] <- exp(smokeTable[, 1])
knitr::kable(smokeTable, digits=3)
knitr::kable(Pmisc::priorPostSd(smokeModel2)$summary, digits=3)
smokeTable2 <- 1/sqrt(smokeModel2$summary.hyper)
# smokeTable2[, 1] <- exp(smokeTable2[, 1])
knitr::kable(smokeTable2, digits=3)
par(mfrow=c(1, 2))
smokePrior2 = Pmisc::priorPostSd(smokeModel2)
do.call(matplot, smokePrior2$state$matplot)
do.call(legend, smokePrior2$legend)
mtext("state", side=3)
do.call(matplot, smokePrior2$school$matplot)
do.call(legend, smokePrior2$legend)
mtext("school", side=3)
# do.call(matplot, smokePrior2$RuralUrban$matplot)
# do.call(legend, smokePrior2$legend)
# mtext("Rural-Urban", side=3)
rbind(smokeModel2$summary.fixed[, c("mean", "0.025quant", "0.975quant")],
Pmisc::priorPostSd(smokeModel2)$summary[, c("mean", "0.025quant",
"0.975quant")])
# create matrix of predicted probabilities
theCoef2 = exp(smokeModel2$summary.lincomb.derived[, c("0.5quant",
"0.025quant", "0.975quant")])
theCoef2 = theCoef2/(1 + theCoef2)
smokeTable <- smokeModel2$summary.fixed
smokeTable[, 1] <- exp(smokeTable[, 1])
knitr::kable(smokeTable[c(1:13, 15, 25:40, 49:56)], digits=3)
par(mfrow=c(1, 2))
smokePrior2 = Pmisc::priorPostSd(smokeModel2)
do.call(matplot, smokePrior2$state$matplot)
do.call(legend, smokePrior2$legend)
mtext("state", side=3)
do.call(matplot, smokePrior2$school$matplot)
do.call(legend, smokePrior2$legend)
mtext("school", side=3)
# do.call(matplot, smokePrior2$RuralUrban$matplot)
# do.call(legend, smokePrior2$legend)
# mtext("Rural-Urban", side=3)
rbind(smokeModel2$summary.fixed[, c("mean", "0.025quant", "0.975quant")],
Pmisc::priorPostSd(smokeModel2)$summary[, c("mean", "0.025quant",
"0.975quant")])
# create matrix of predicted probabilities
theCoef2 = exp(smokeModel2$summary.lincomb.derived[, c("0.5quant",
"0.025quant", "0.975quant")])
theCoef2 = theCoef2/(1 + theCoef2)
smokeTable <- smokeModel2$summary.fixed
smokeTable[, 1] <- exp(smokeTable[, 1])
knitr::kable(smokeTable[c(1:13, 15, 25:40, 49:56),], digits=3)
knitr::kable(Pmisc::priorPostSd(smokeModel2)$summary, digits=3)
smokeTable2 <- 1/sqrt(smokeModel2$summary.hyper)
# smokeTable2[, 1] <- exp(smokeTable2[, 1])
knitr::kable(smokeTable2, digits=3)
