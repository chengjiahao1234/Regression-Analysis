"latent")))
sampleDeathsOver = matrix(rpois(length(sampleIntensityOver), sampleIntensityOver),
nrow(sampleIntensityOver), ncol(sampleIntensityOver))
matplot(xForInlaOver70$time, sampleDeathsOver, col = "#00000010",
lwd = 2, lty = 1, type = "l", log = "y", ylim=c(500, 2200))
points(x[x$age == "70 years old and over", c("time", "dead")], col = "red", cex = 0.5)
matplot(xForInlaOver70$time, sampleDeathsOver, col = "#00000010", lwd = 2,
lty = 1, type = "l", log = "y", xlim = as.Date(c("2019/6/1", "2020/11/1")),
ylim = c(0.5, 2.3) * 1000)
points(x[x$age == "70 years old and over", c("time", "dead")], col = "red", cex = 0.5)
xPostCovidOver = xPostCovid[xPostCovid$age == "70 years old and over", ]
xPostCovidForecastOver = sampleDeathsOver[match(xPostCovidOver$time,
xForInlaOver70$time), ]
excessDeathsOver = xPostCovidOver$dead - xPostCovidForecastOver
matplot(xPostCovidOver$time, xPostCovidForecastOver, type = "l",
ylim = c(500, 2200), col = "black")
points(xPostCovidOver[, c("time", "dead")], col = "red")
matplot(xPostCovidOver$time, excessDeathsOver, type = "l", lty = 1, col = "#00000030")
excessDeathsOverSub1 = excessDeathsOver[xPostCovidOver$time > as.Date("2020/03/01") &
xPostCovidOver$time < as.Date("2020/06/01"),
]
excessDeathsOverInPeriod1 = apply(excessDeathsOverSub1, 2, sum)
round(quantile(excessDeathsOverInPeriod1))
round(quantile(excessDeathsOver[nrow(excessDeathsOver), ]))
ecdf(quantile(excessDeathsOverInPeriod1), plot=TRUE)
qCols = paste0(c(0.5, 0.025, 0.975), "quant")
rbind(res2$summary.fixed[, qCols], Pmisc::priorPostSd(res2)$summary[, qCols])
matplot(xForInlaOver70$time, res2$summary.fitted.values[, qCols], type = "l",
ylim = c(500, 1800), lty = c(1, 2, 2), col = "black", log = "y")
points(x[x$age == "70 years old and over", c("time", "dead")], cex = 0.4, col = "red")
matplot(xForInlaOver70$time,
res2$summary.random$timeForInla[, c("0.5quant", "0.975quant", "0.025quant")],
type = "l", lty = c(1, 2, 2), col = "black")
sampleListOver = INLA::inla.posterior.sample(30, res2, selection = list(Predictor = 0))
sampleIntensityOver = exp(do.call(cbind, Biobase::subListExtract(sampleListOver,
"latent")))
sampleDeathsOver = matrix(rpois(length(sampleIntensityOver), sampleIntensityOver),
nrow(sampleIntensityOver), ncol(sampleIntensityOver))
matplot(xForInlaOver70$time, sampleDeathsOver, col = "#00000010",
lwd = 2, lty = 1, type = "l", log = "y", ylim=c(500, 2200))
points(x[x$age == "70 years old and over", c("time", "dead")], col = "red", cex = 0.5)
matplot(xForInlaOver70$time, sampleDeathsOver, col = "#00000010", lwd = 2,
lty = 1, type = "l", log = "y", xlim = as.Date(c("2019/6/1", "2020/11/1")),
ylim = c(0.5, 2.3) * 1000)
points(x[x$age == "70 years old and over", c("time", "dead")], col = "red", cex = 0.5)
xPostCovidOver = xPostCovid[xPostCovid$age == "70 years old and over", ]
xPostCovidForecastOver = sampleDeathsOver[match(xPostCovidOver$time,
xForInlaOver70$time), ]
excessDeathsOver = xPostCovidOver$dead - xPostCovidForecastOver
matplot(xPostCovidOver$time, xPostCovidForecastOver, type = "l",
ylim = c(500, 2200), col = "black")
points(xPostCovidOver[, c("time", "dead")], col = "red")
matplot(xPostCovidOver$time, excessDeathsOver, type = "l", lty = 1, col = "#00000030")
excessDeathsOverSub1 = excessDeathsOver[xPostCovidOver$time > as.Date("2020/03/01") &
xPostCovidOver$time < as.Date("2020/06/01"),
]
excessDeathsOverInPeriod1 = apply(excessDeathsOverSub1, 2, sum)
round(quantile(excessDeathsOverInPeriod1))
round(quantile(excessDeathsOver[nrow(excessDeathsOver), ]))
quantile(excessDeathsOverInPeriod1)
quantile(excessDeathsOver[nrow(excessDeathsOver), ])
excessDeathsOverSub2 = excessDeathsOver[xPostCovidOver$time > as.Date("2020/09/01") &
xPostCovidOver$time < as.Date("2020/11/01"),
]
excessDeathsOverInPeriod2 = apply(excessDeathsOverSub2, 2, sum)
round(quantile(excessDeathsOverInPeriod2))
round(quantile(excessDeathsOver[nrow(excessDeathsOver), ]))
quantile(excessDeathsOverInPeriod2)
quantile(excessDeathsOver[nrow(excessDeathsOver), ])
qCols = paste0(c(0.5, 0.025, 0.975), "quant")
rbind(res2$summary.fixed[, qCols], Pmisc::priorPostSd(res2)$summary[, qCols])
matplot(xForInlaOver70$time, res2$summary.fitted.values[, qCols], type = "l",
ylim = c(500, 1800), lty = c(1, 2, 2), col = "black", log = "y")
points(x[x$age == "70 years old and over", c("time", "dead")], cex = 0.4, col = "red")
matplot(xForInlaOver70$time,
res2$summary.random$timeForInla[, c("0.5quant", "0.975quant", "0.025quant")],
type = "l", lty = c(1, 2, 2), col = "black")
sampleListOver = INLA::inla.posterior.sample(30, res2, selection = list(Predictor = 0))
sampleIntensityOver = exp(do.call(cbind, Biobase::subListExtract(sampleListOver,
"latent")))
sampleDeathsOver = matrix(rpois(length(sampleIntensityOver), sampleIntensityOver),
nrow(sampleIntensityOver), ncol(sampleIntensityOver))
matplot(xForInlaOver70$time, sampleDeathsOver, col = "#00000010",
lwd = 2, lty = 1, type = "l", log = "y", ylim=c(500, 2200))
points(x[x$age == "70 years old and over", c("time", "dead")], col = "red", cex = 0.5)
matplot(xForInlaOver70$time, sampleDeathsOver, col = "#00000010", lwd = 2,
lty = 1, type = "l", log = "y", xlim = as.Date(c("2019/6/1", "2020/11/1")),
ylim = c(0.5, 2.3) * 1000)
points(x[x$age == "70 years old and over", c("time", "dead")], col = "red", cex = 0.5)
xPostCovidOver = xPostCovid[xPostCovid$age == "70 years old and over", ]
xPostCovidForecastOver = sampleDeathsOver[match(xPostCovidOver$time,
xForInlaOver70$time), ]
excessDeathsOver = xPostCovidOver$dead - xPostCovidForecastOver
matplot(xPostCovidOver$time, xPostCovidForecastOver, type = "l",
ylim = c(500, 2200), col = "black")
points(xPostCovidOver[, c("time", "dead")], col = "red")
matplot(xPostCovidOver$time, excessDeathsOver, type = "l", lty = 1, col = "#00000030")
excessDeathsOverSub1 = excessDeathsOver[xPostCovidOver$time > as.Date("2020/03/01") &
xPostCovidOver$time < as.Date("2020/06/01"),
]
excessDeathsOverInPeriod1 = apply(excessDeathsOverSub1, 2, sum)
round(quantile(excessDeathsOverInPeriod1))
round(quantile(excessDeathsOver[nrow(excessDeathsOver), ]))
ecdf(excessDeathsOverInPeriod1)
ecdf(excessDeathsOver[nrow(excessDeathsOver), ])
excessDeathsOverSub2 = excessDeathsOver[xPostCovidOver$time > as.Date("2020/09/01") &
xPostCovidOver$time < as.Date("2020/10/01"),
]
excessDeathsOverInPeriod2 = apply(excessDeathsOverSub2, 2, sum)
round(quantile(excessDeathsOverInPeriod2))
round(quantile(excessDeathsOver[nrow(excessDeathsOver), ]))
ecdf(excessDeathsOverInPeriod2)
ecdf(excessDeathsOver[nrow(excessDeathsOver), ])
qCols = paste0(c(0.5, 0.025, 0.975), "quant")
rbind(res2$summary.fixed[, qCols], Pmisc::priorPostSd(res2)$summary[, qCols])
matplot(xForInlaOver70$time, res2$summary.fitted.values[, qCols], type = "l",
ylim = c(500, 1800), lty = c(1, 2, 2), col = "black", log = "y")
points(x[x$age == "70 years old and over", c("time", "dead")], cex = 0.4, col = "red")
matplot(xForInlaOver70$time,
res2$summary.random$timeForInla[, c("0.5quant", "0.975quant", "0.025quant")],
type = "l", lty = c(1, 2, 2), col = "black")
sampleListOver = INLA::inla.posterior.sample(30, res2, selection = list(Predictor = 0))
sampleIntensityOver = exp(do.call(cbind, Biobase::subListExtract(sampleListOver,
"latent")))
sampleDeathsOver = matrix(rpois(length(sampleIntensityOver), sampleIntensityOver),
nrow(sampleIntensityOver), ncol(sampleIntensityOver))
matplot(xForInlaOver70$time, sampleDeathsOver, col = "#00000010",
lwd = 2, lty = 1, type = "l", log = "y", ylim=c(500, 2200))
points(x[x$age == "70 years old and over", c("time", "dead")], col = "red", cex = 0.5)
matplot(xForInlaOver70$time, sampleDeathsOver, col = "#00000010", lwd = 2,
lty = 1, type = "l", log = "y", xlim = as.Date(c("2019/6/1", "2020/11/1")),
ylim = c(0.5, 2.3) * 1000)
points(x[x$age == "70 years old and over", c("time", "dead")], col = "red", cex = 0.5)
xPostCovidOver = xPostCovid[xPostCovid$age == "70 years old and over", ]
xPostCovidForecastOver = sampleDeathsOver[match(xPostCovidOver$time,
xForInlaOver70$time), ]
excessDeathsOver = xPostCovidOver$dead - xPostCovidForecastOver
matplot(xPostCovidOver$time, xPostCovidForecastOver, type = "l",
ylim = c(500, 2200), col = "black")
points(xPostCovidOver[, c("time", "dead")], col = "red")
matplot(xPostCovidOver$time, excessDeathsOver, type = "l", lty = 1, col = "#00000030")
excessDeathsOverSub1 = excessDeathsOver[xPostCovidOver$time > as.Date("2020/03/01") &
xPostCovidOver$time < as.Date("2020/06/01"),
]
excessDeathsOverInPeriod1 = apply(excessDeathsOverSub1, 2, sum)
round(quantile(excessDeathsOverInPeriod1))
round(quantile(excessDeathsOver[nrow(excessDeathsOver), ]))
plot(ecdf(excessDeathsOverInPeriod1))
plot(ecdf(excessDeathsOver[nrow(excessDeathsOver), ]))
excessDeathsOverSub2 = excessDeathsOver[xPostCovidOver$time > as.Date("2020/09/01") &
xPostCovidOver$time < as.Date("2020/10/01"),
]
excessDeathsOverInPeriod2 = apply(excessDeathsOverSub2, 2, sum)
round(quantile(excessDeathsOverInPeriod2))
round(quantile(excessDeathsOver[nrow(excessDeathsOver), ]))
plot(ecdf(excessDeathsOverInPeriod2))
plot(ecdf(excessDeathsOver[nrow(excessDeathsOver), ]))
qCols = paste0(c(0.5, 0.025, 0.975), "quant")
rbind(res2$summary.fixed[, qCols], Pmisc::priorPostSd(res2)$summary[, qCols])
matplot(xForInlaOver70$time, res2$summary.fitted.values[, qCols], type = "l",
ylim = c(500, 1800), lty = c(1, 2, 2), col = "black", log = "y")
points(x[x$age == "70 years old and over", c("time", "dead")], cex = 0.4, col = "red")
matplot(xForInlaOver70$time,
res2$summary.random$timeForInla[, c("0.5quant", "0.975quant", "0.025quant")],
type = "l", lty = c(1, 2, 2), col = "black")
sampleListOver = INLA::inla.posterior.sample(30, res2, selection = list(Predictor = 0))
sampleIntensityOver = exp(do.call(cbind, Biobase::subListExtract(sampleListOver,
"latent")))
sampleDeathsOver = matrix(rpois(length(sampleIntensityOver), sampleIntensityOver),
nrow(sampleIntensityOver), ncol(sampleIntensityOver))
matplot(xForInlaOver70$time, sampleDeathsOver, col = "#00000010",
lwd = 2, lty = 1, type = "l", log = "y", ylim=c(500, 2200))
points(x[x$age == "70 years old and over", c("time", "dead")], col = "red", cex = 0.5)
matplot(xForInlaOver70$time, sampleDeathsOver, col = "#00000010", lwd = 2,
lty = 1, type = "l", log = "y", xlim = as.Date(c("2019/6/1", "2020/11/1")),
ylim = c(0.5, 2.3) * 1000)
points(x[x$age == "70 years old and over", c("time", "dead")], col = "red", cex = 0.5)
xPostCovidOver = xPostCovid[xPostCovid$age == "70 years old and over", ]
xPostCovidForecastOver = sampleDeathsOver[match(xPostCovidOver$time,
xForInlaOver70$time), ]
excessDeathsOver = xPostCovidOver$dead - xPostCovidForecastOver
matplot(xPostCovidOver$time, xPostCovidForecastOver, type = "l",
ylim = c(500, 2200), col = "black")
points(xPostCovidOver[, c("time", "dead")], col = "red")
matplot(xPostCovidOver$time, excessDeathsOver, type = "l", lty = 1, col = "#00000030")
excessDeathsOverSub1 = excessDeathsOver[xPostCovidOver$time > as.Date("2020/03/01") &
xPostCovidOver$time < as.Date("2020/06/01"),
]
excessDeathsOverInPeriod1 = apply(excessDeathsOverSub1, 2, sum)
round(quantile(excessDeathsOverInPeriod1))
round(quantile(excessDeathsOver[nrow(excessDeathsOver), ]))
plot(ecdf(quantile(excessDeathsOverInPeriod1)))
plot(ecdf(quantile(excessDeathsOver[nrow(excessDeathsOver), ])))
excessDeathsOverSub2 = excessDeathsOver[xPostCovidOver$time > as.Date("2020/09/01") &
xPostCovidOver$time < as.Date("2020/10/01"),
]
excessDeathsOverInPeriod2 = apply(excessDeathsOverSub2, 2, sum)
round(quantile(excessDeathsOverInPeriod2))
round(quantile(excessDeathsOver[nrow(excessDeathsOver), ]))
plot(ecdf(quantile(excessDeathsOverInPeriod2)))
plot(ecdf(quantile(excessDeathsOver[nrow(excessDeathsOver), ])))
qCols = paste0(c(0.5, 0.025, 0.975), "quant")
rbind(res3$summary.fixed[, qCols], Pmisc::priorPostSd(res3)$summary[, qCols])
matplot(xForInlaUnder50$time, res3$summary.fitted.values[, qCols], type = "l",
lty = c(1, 2, 2), col = "black", log = "y")
points(x[x$age == "0-49 years old", c("time", "dead")], cex = 0.4, col = "red")
matplot(xForInlaUnder50$time,
res3$summary.random$timeForInla[, c("0.5quant", "0.975quant", "0.025quant")],
type = "l", lty = c(1, 2, 2), col = "black")
sampleListUnder = INLA::inla.posterior.sample(30, res3, selection = list(Predictor = 0))
sampleIntensityUnder = exp(do.call(cbind, Biobase::subListExtract(sampleListUnder,
"latent")))
sampleDeathsUnder = matrix(rpois(length(sampleIntensityUnder), sampleIntensityUnder),
nrow(sampleIntensityUnder), ncol(sampleIntensityUnder))
matplot(xForInlaUnder50$time, sampleDeathsUnder, col = "#00000010",
lwd = 2, lty = 1, type = "l", log = "y")
points(x[x$age == "0-49 years old", c("time", "dead")], col = "red", cex = 0.5)
matplot(xForInlaUnder50$time, sampleDeathsUnder, col = "#00000010", lwd = 2,
lty = 1, type = "l", log = "y", xlim = as.Date(c("2019/6/1", "2020/11/1")))
points(x[x$age == "0-49 years old", c("time", "dead")], col = "red", cex = 0.5)
xPostCovidUnder = xPostCovid[xPostCovid$age == "0-49 years old", ]
xPostCovidForecastUnder = sampleDeathsUnder[match(xPostCovidUnder$time,
xForInlaUnder50$time), ]
excessDeathsUnder = xPostCovidUnder$dead - xPostCovidForecastUnder
matplot(xPostCovidUnder$time, xPostCovidForecastUnder, type = "l", col = "black")
points(xPostCovidUnder[, c("time", "dead")], col = "red")
matplot(xPostCovidUnder$time, excessDeathsUnder, type = "l", lty = 1, col = "#00000030")
excessDeathsUnderSub1 = excessDeathsUnder[xPostCovidUnder$time > as.Date("2020/03/01") &
xPostCovidUnder$time < as.Date("2020/06/01"),
]
excessDeathsUnderInPeriod1 = apply(excessDeathsUnderSub1, 2, sum)
round(quantile(excessDeathsUnderInPeriod1))
round(quantile(excessDeathsUnder[nrow(excessDeathsUnder), ]))
excessDeathsUnderSub2 = excessDeathsUnder[xPostCovidUnder$time > as.Date("2020/09/01") &
xPostCovidUnder$time < as.Date("2020/11/01"),
]
excessDeathsUnderInPeriod2 = apply(excessDeathsUnderSub2, 2, sum)
round(quantile(excessDeathsUnderInPeriod2))
round(quantile(excessDeathsUnder[nrow(excessDeathsUnder), ]))
plot(ecdf(quantile(excessDeathsUnderInPeriod1)))
plot(ecdf(quantile(excessDeathsUnderInPeriod2)))
plot(ecdf(quantile(excessDeathsUnder[nrow(excessDeathsUnder), ])))
plot(x[x$age == "70 years old and over", c("time", "dead")], type = "o", log = "y")
matplot(xWide2[xWide2$age == "70 years old and over", Syear],
type = "l", lty = 1, col = Scol)
legend("topright", col = Scol, legend = Syear, bty = "n", lty = 1, lwd = 3)
xForInlaOver70= xForInla[xForInla$age == '70 years old and over', ]
library(INLA, verbose=FALSE)
res2 = inla(dead ~ sin12 + sin6 + cos12 + cos6 +
f(timeIid, prior='pc.prec', param= c(log(1.2), 0.5)) +
f(timeForInla, model = 'rw2', prior='pc.prec',
param= c(0.01, 0.5)), data=xForInlaOver70,
control.predictor = list(compute=TRUE, link=1),
control.compute = list(config=TRUE),
# control.inla = list(fast=FALSE, strategy='laplace'),
family='poisson')
plot(x[x$age == "70 years old and over", c("time", "dead")], type = "o", log = "y")
matplot(xWide2[xWide2$age == "70 years old and over", Syear],
type = "l", lty = 1, col = Scol, main="Death counts by years for 70+ people")
legend("topright", col = Scol, legend = Syear, bty = "n", lty = 1, lwd = 3)
xForInlaOver70= xForInla[xForInla$age == '70 years old and over', ]
library(INLA, verbose=FALSE)
res2 = inla(dead ~ sin12 + sin6 + cos12 + cos6 +
f(timeIid, prior='pc.prec', param= c(log(1.2), 0.5)) +
f(timeForInla, model = 'rw2', prior='pc.prec',
param= c(0.01, 0.5)), data=xForInlaOver70,
control.predictor = list(compute=TRUE, link=1),
control.compute = list(config=TRUE),
# control.inla = list(fast=FALSE, strategy='laplace'),
family='poisson')
qCols = paste0(c(0.5, 0.025, 0.975), "quant")
rbind(res2$summary.fixed[, qCols], Pmisc::priorPostSd(res2)$summary[, qCols])
matplot(xForInlaOver70$time, res2$summary.fitted.values[, qCols], type = "l",
ylim = c(500, 1800), lty = c(1, 2, 2), col = "black", log = "y")
points(x[x$age == "70 years old and over", c("time", "dead")], cex = 0.4, col = "red")
matplot(xForInlaOver70$time,
res2$summary.random$timeForInla[, c("0.5quant", "0.975quant", "0.025quant")],
type = "l", lty = c(1, 2, 2), col = "black")
sampleListOver = INLA::inla.posterior.sample(30, res2, selection = list(Predictor = 0))
sampleIntensityOver = exp(do.call(cbind, Biobase::subListExtract(sampleListOver,
"latent")))
sampleDeathsOver = matrix(rpois(length(sampleIntensityOver), sampleIntensityOver),
nrow(sampleIntensityOver), ncol(sampleIntensityOver))
matplot(xForInlaOver70$time, sampleDeathsOver, col = "#00000010",
lwd = 2, lty = 1, type = "l", log = "y", ylim=c(500, 2200))
points(x[x$age == "70 years old and over", c("time", "dead")], col = "red", cex = 0.5)
matplot(xForInlaOver70$time, sampleDeathsOver, col = "#00000010", lwd = 2,
lty = 1, type = "l", log = "y", xlim = as.Date(c("2019/6/1", "2020/11/1")),
ylim = c(0.5, 2.3) * 1000)
points(x[x$age == "70 years old and over", c("time", "dead")], col = "red", cex = 0.5)
xPostCovidOver = xPostCovid[xPostCovid$age == "70 years old and over", ]
xPostCovidForecastOver = sampleDeathsOver[match(xPostCovidOver$time,
xForInlaOver70$time), ]
excessDeathsOver = xPostCovidOver$dead - xPostCovidForecastOver
matplot(xPostCovidOver$time, xPostCovidForecastOver, type = "l",
ylim = c(500, 2200), col = "black")
points(xPostCovidOver[, c("time", "dead")], col = "red")
matplot(xPostCovidOver$time, excessDeathsOver, type = "l", lty = 1, col = "#00000030",
main="Difference between the real and predicted death counts for 70+ people")
excessDeathsOverSub1 = excessDeathsOver[xPostCovidOver$time > as.Date("2020/03/01") &
xPostCovidOver$time < as.Date("2020/06/01"),
]
excessDeathsOverInPeriod1 = apply(excessDeathsOverSub1, 2, sum)
round(quantile(excessDeathsOverInPeriod1))
round(quantile(excessDeathsOver[nrow(excessDeathsOver), ]))
excessDeathsOverSub2 = excessDeathsOver[xPostCovidOver$time > as.Date("2020/09/01") &
xPostCovidOver$time < as.Date("2020/10/01"),
]
excessDeathsOverInPeriod2 = apply(excessDeathsOverSub2, 2, sum)
round(quantile(excessDeathsOverInPeriod2))
round(quantile(excessDeathsOver[nrow(excessDeathsOver), ]))
plot(ecdf(quantile(excessDeathsOverInPeriod1)))
plot(ecdf(quantile(excessDeathsOverInPeriod2)))
plot(ecdf(quantile(excessDeathsOver[nrow(excessDeathsOver), ])))
plot(x[x$age == "0-49 years old", c("time", "dead")], type = "o", log = "y")
matplot(xWide2[xWide2$age == "0-49 years old", Syear], type = "l", lty = 1,
col = Scol, main="Death counts by years for under 50 people")
legend("topright", col = Scol, legend = Syear, bty = "n", lty = 1, lwd = 3)
xForInlaUnder50= xForInla[xForInla$age == '0-49 years old', ]
library(INLA, verbose=FALSE)
res3 = inla(dead ~ sin12 + sin6 + cos12 + cos6 +
f(timeIid, prior='pc.prec', param= c(log(1.2), 0.5)) +
f(timeForInla, model = 'rw2', prior='pc.prec',
param= c(0.01, 0.5)), data=xForInlaUnder50,
control.predictor = list(compute=TRUE, link=1),
control.compute = list(config=TRUE),
# control.inla = list(fast=FALSE, strategy='laplace'),
family='poisson')
qCols = paste0(c(0.5, 0.025, 0.975), "quant")
rbind(res3$summary.fixed[, qCols], Pmisc::priorPostSd(res3)$summary[, qCols])
matplot(xForInlaUnder50$time, res3$summary.fitted.values[, qCols], type = "l",
lty = c(1, 2, 2), col = "black", log = "y")
points(x[x$age == "0-49 years old", c("time", "dead")], cex = 0.4, col = "red")
matplot(xForInlaUnder50$time,
res3$summary.random$timeForInla[, c("0.5quant", "0.975quant", "0.025quant")],
type = "l", lty = c(1, 2, 2), col = "black")
sampleListUnder = INLA::inla.posterior.sample(30, res3, selection = list(Predictor = 0))
sampleIntensityUnder = exp(do.call(cbind, Biobase::subListExtract(sampleListUnder,
"latent")))
sampleDeathsUnder = matrix(rpois(length(sampleIntensityUnder), sampleIntensityUnder),
nrow(sampleIntensityUnder), ncol(sampleIntensityUnder))
matplot(xForInlaUnder50$time, sampleDeathsUnder, col = "#00000010",
lwd = 2, lty = 1, type = "l", log = "y")
points(x[x$age == "0-49 years old", c("time", "dead")], col = "red", cex = 0.5)
matplot(xForInlaUnder50$time, sampleDeathsUnder, col = "#00000010", lwd = 2,
lty = 1, type = "l", log = "y", xlim = as.Date(c("2019/6/1", "2020/11/1")))
points(x[x$age == "0-49 years old", c("time", "dead")], col = "red", cex = 0.5)
xPostCovidUnder = xPostCovid[xPostCovid$age == "0-49 years old", ]
xPostCovidForecastUnder = sampleDeathsUnder[match(xPostCovidUnder$time,
xForInlaUnder50$time), ]
excessDeathsUnder = xPostCovidUnder$dead - xPostCovidForecastUnder
matplot(xPostCovidUnder$time, xPostCovidForecastUnder, type = "l", col = "black")
points(xPostCovidUnder[, c("time", "dead")], col = "red")
matplot(xPostCovidUnder$time, excessDeathsUnder, type = "l", lty = 1, col = "#00000030",
main="Difference between the real and predicted death counts for under 50 people")
excessDeathsUnderSub1 = excessDeathsUnder[xPostCovidUnder$time > as.Date("2020/03/01") &
xPostCovidUnder$time < as.Date("2020/06/01"),
]
excessDeathsUnderInPeriod1 = apply(excessDeathsUnderSub1, 2, sum)
round(quantile(excessDeathsUnderInPeriod1))
round(quantile(excessDeathsUnder[nrow(excessDeathsUnder), ]))
excessDeathsUnderSub2 = excessDeathsUnder[xPostCovidUnder$time > as.Date("2020/09/01") &
xPostCovidUnder$time < as.Date("2020/11/01"),
]
excessDeathsUnderInPeriod2 = apply(excessDeathsUnderSub2, 2, sum)
round(quantile(excessDeathsUnderInPeriod2))
round(quantile(excessDeathsUnder[nrow(excessDeathsUnder), ]))
plot(ecdf(quantile(excessDeathsUnderInPeriod1)))
plot(ecdf(quantile(excessDeathsUnderInPeriod2)))
plot(ecdf(quantile(excessDeathsUnder[nrow(excessDeathsUnder), ])))
qCols = paste0(c(0.5, 0.025, 0.975), "quant")
rbind(res3$summary.fixed[, qCols], Pmisc::priorPostSd(res3)$summary[, qCols])
matplot(xForInlaUnder50$time, res3$summary.fitted.values[, qCols], type = "l",
lty = c(1, 2, 2), col = "black", log = "y")
points(x[x$age == "0-49 years old", c("time", "dead")], cex = 0.4, col = "red")
matplot(xForInlaUnder50$time,
res3$summary.random$timeForInla[, c("0.5quant", "0.975quant", "0.025quant")],
type = "l", lty = c(1, 2, 2), col = "black")
sampleListUnder = INLA::inla.posterior.sample(30, res3, selection = list(Predictor = 0))
sampleIntensityUnder = exp(do.call(cbind, Biobase::subListExtract(sampleListUnder,
"latent")))
sampleDeathsUnder = matrix(rpois(length(sampleIntensityUnder), sampleIntensityUnder),
nrow(sampleIntensityUnder), ncol(sampleIntensityUnder))
matplot(xForInlaUnder50$time, sampleDeathsUnder, col = "#00000010",
lwd = 2, lty = 1, type = "l", log = "y")
points(x[x$age == "0-49 years old", c("time", "dead")], col = "red", cex = 0.5)
matplot(xForInlaUnder50$time, sampleDeathsUnder, col = "#00000010", lwd = 2,
lty = 1, type = "l", log = "y", xlim = as.Date(c("2019/6/1", "2020/11/1")))
points(x[x$age == "0-49 years old", c("time", "dead")], col = "red", cex = 0.5)
xPostCovidUnder = xPostCovid[xPostCovid$age == "0-49 years old", ]
xPostCovidForecastUnder = sampleDeathsUnder[match(xPostCovidUnder$time,
xForInlaUnder50$time), ]
excessDeathsUnder = xPostCovidUnder$dead - xPostCovidForecastUnder
matplot(xPostCovidUnder$time, xPostCovidForecastUnder, type = "l", col = "black")
points(xPostCovidUnder[, c("time", "dead")], col = "red")
matplot(xPostCovidUnder$time, excessDeathsUnder, type = "l", lty = 1, col = "#00000030",
main="Difference between the real and predicted death counts for under 50 people")
excessDeathsUnderSub1 = excessDeathsUnder[xPostCovidUnder$time > as.Date("2020/03/01") &
xPostCovidUnder$time < as.Date("2020/06/01"),
]
excessDeathsUnderInPeriod1 = apply(excessDeathsUnderSub1, 2, sum)
round(quantile(excessDeathsUnderInPeriod1))
round(quantile(excessDeathsUnder[nrow(excessDeathsUnder), ]))
excessDeathsUnderSub2 = excessDeathsUnder[xPostCovidUnder$time > as.Date("2020/09/01") &
xPostCovidUnder$time < as.Date("2020/11/01"),
]
excessDeathsUnderInPeriod2 = apply(excessDeathsUnderSub2, 2, sum)
round(quantile(excessDeathsUnderInPeriod2))
round(quantile(excessDeathsUnder[nrow(excessDeathsUnder), ]))
plot(ecdf(quantile(excessDeathsUnderInPeriod1)))
plot(ecdf(quantile(excessDeathsUnderInPeriod2)))
plot(ecdf(quantile(excessDeathsUnder[nrow(excessDeathsUnder), ])))
qCols = paste0(c(0.5, 0.025, 0.975), "quant")
rbind(res3$summary.fixed[, qCols], Pmisc::priorPostSd(res3)$summary[, qCols])
matplot(xForInlaUnder50$time, res3$summary.fitted.values[, qCols], type = "l",
lty = c(1, 2, 2), col = "black", log = "y")
points(x[x$age == "0-49 years old", c("time", "dead")], cex = 0.4, col = "red")
matplot(xForInlaUnder50$time,
res3$summary.random$timeForInla[, c("0.5quant", "0.975quant", "0.025quant")],
type = "l", lty = c(1, 2, 2), col = "black")
sampleListUnder = INLA::inla.posterior.sample(30, res3, selection = list(Predictor = 0))
sampleIntensityUnder = exp(do.call(cbind, Biobase::subListExtract(sampleListUnder,
"latent")))
sampleDeathsUnder = matrix(rpois(length(sampleIntensityUnder), sampleIntensityUnder),
nrow(sampleIntensityUnder), ncol(sampleIntensityUnder))
matplot(xForInlaUnder50$time, sampleDeathsUnder, col = "#00000010",
lwd = 2, lty = 1, type = "l", log = "y")
points(x[x$age == "0-49 years old", c("time", "dead")], col = "red", cex = 0.5)
matplot(xForInlaUnder50$time, sampleDeathsUnder, col = "#00000010", lwd = 2,
lty = 1, type = "l", log = "y", xlim = as.Date(c("2019/6/1", "2020/11/1")))
points(x[x$age == "0-49 years old", c("time", "dead")], col = "red", cex = 0.5)
xPostCovidUnder = xPostCovid[xPostCovid$age == "0-49 years old", ]
xPostCovidForecastUnder = sampleDeathsUnder[match(xPostCovidUnder$time,
xForInlaUnder50$time), ]
excessDeathsUnder = xPostCovidUnder$dead - xPostCovidForecastUnder
matplot(xPostCovidUnder$time, xPostCovidForecastUnder, type = "l", col = "black")
points(xPostCovidUnder[, c("time", "dead")], col = "red")
matplot(xPostCovidUnder$time, excessDeathsUnder, type = "l", lty = 1, col = "#00000030",
main="Difference between the real and predicted death counts for under 50 people")
excessDeathsUnderSub1 = excessDeathsUnder[xPostCovidUnder$time > as.Date("2020/03/01") &
xPostCovidUnder$time < as.Date("2020/06/01"),
]
excessDeathsUnderInPeriod1 = apply(excessDeathsUnderSub1, 2, sum)
round(quantile(excessDeathsUnderInPeriod1))
round(quantile(excessDeathsUnder[nrow(excessDeathsUnder), ]))
excessDeathsUnderSub2 = excessDeathsUnder[xPostCovidUnder$time > as.Date("2020/09/01") &
xPostCovidUnder$time < as.Date("2020/11/01"),
]
excessDeathsUnderInPeriod2 = apply(excessDeathsUnderSub2, 2, sum)
round(quantile(excessDeathsUnderInPeriod2))
round(quantile(excessDeathsUnder[nrow(excessDeathsUnder), ]))
plot(ecdf(quantile(excessDeathsUnderInPeriod1)))
plot(ecdf(quantile(excessDeathsUnderInPeriod2)))
plot(ecdf(quantile(excessDeathsUnder[nrow(excessDeathsUnder), ])))
library("Pmisc")
library("INLA")
qCols = paste0(c(0.5, 0.025, 0.975), "quant")
rbind(res3$summary.fixed[, qCols], Pmisc::priorPostSd(res3)$summary[, qCols])
matplot(xForInlaUnder50$time, res3$summary.fitted.values[, qCols], type = "l",
lty = c(1, 2, 2), col = "black", log = "y")
points(x[x$age == "0-49 years old", c("time", "dead")], cex = 0.4, col = "red")
matplot(xForInlaUnder50$time,
res3$summary.random$timeForInla[, c("0.5quant", "0.975quant", "0.025quant")],
type = "l", lty = c(1, 2, 2), col = "black")
sampleListUnder = INLA::inla.posterior.sample(30, res3, selection = list(Predictor = 0))
sampleIntensityUnder = exp(do.call(cbind, Biobase::subListExtract(sampleListUnder,
"latent")))
sampleDeathsUnder = matrix(rpois(length(sampleIntensityUnder), sampleIntensityUnder),
nrow(sampleIntensityUnder), ncol(sampleIntensityUnder))
matplot(xForInlaUnder50$time, sampleDeathsUnder, col = "#00000010",
lwd = 2, lty = 1, type = "l", log = "y")
points(x[x$age == "0-49 years old", c("time", "dead")], col = "red", cex = 0.5)
matplot(xForInlaUnder50$time, sampleDeathsUnder, col = "#00000010", lwd = 2,
lty = 1, type = "l", log = "y", xlim = as.Date(c("2019/6/1", "2020/11/1")))
points(x[x$age == "0-49 years old", c("time", "dead")], col = "red", cex = 0.5)
xPostCovidUnder = xPostCovid[xPostCovid$age == "0-49 years old", ]
xPostCovidForecastUnder = sampleDeathsUnder[match(xPostCovidUnder$time,
xForInlaUnder50$time), ]
excessDeathsUnder = xPostCovidUnder$dead - xPostCovidForecastUnder
matplot(xPostCovidUnder$time, xPostCovidForecastUnder, type = "l", col = "black")
points(xPostCovidUnder[, c("time", "dead")], col = "red")
matplot(xPostCovidUnder$time, excessDeathsUnder, type = "l", lty = 1, col = "#00000030",
main="Difference between the real and predicted death counts for under 50 people")
excessDeathsUnderSub1 = excessDeathsUnder[xPostCovidUnder$time > as.Date("2020/03/01") &
xPostCovidUnder$time < as.Date("2020/06/01"),
]
excessDeathsUnderInPeriod1 = apply(excessDeathsUnderSub1, 2, sum)
round(quantile(excessDeathsUnderInPeriod1))
round(quantile(excessDeathsUnder[nrow(excessDeathsUnder), ]))
excessDeathsUnderSub2 = excessDeathsUnder[xPostCovidUnder$time > as.Date("2020/09/01") &
xPostCovidUnder$time < as.Date("2020/10/01"),
]
excessDeathsUnderInPeriod2 = apply(excessDeathsUnderSub2, 2, sum)
round(quantile(excessDeathsUnderInPeriod2))
round(quantile(excessDeathsUnder[nrow(excessDeathsUnder), ]))
plot(ecdf(quantile(excessDeathsUnderInPeriod1)))
plot(ecdf(quantile(excessDeathsUnderInPeriod2)))
plot(ecdf(quantile(excessDeathsUnder[nrow(excessDeathsUnder), ])))
plot(x[x$age == "0-49 years old", c("time", "dead")], type = "o", log = "y")
matplot(xWide2[xWide2$age == "0-49 years old", Syear], type = "l", lty = 1,
col = Scol, main="Death counts by years for under 50 people")
legend("topright", col = Scol, legend = Syear, bty = "n", lty = 1, lwd = 3)
xForInlaUnder50= xForInla[xForInla$age == '0-49 years old', ]
library(INLA, verbose=FALSE)
res3 = inla(dead ~ sin12 + sin6 + cos12 + cos6 +
f(timeIid, prior='pc.prec', param= c(log(1.2), 0.5)) +
f(timeForInla, model = 'rw2', prior='pc.prec',
param= c(0.01, 0.5)), data=xForInlaUnder50,
control.predictor = list(compute=TRUE, link=1),
control.compute = list(config=TRUE),
# control.inla = list(fast=FALSE, strategy='laplace'),
family='poisson')
